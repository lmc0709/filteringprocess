
<launch>
        <param name="use_sim_time" type="bool" value="true"/>

        <node pkg="rviz" type="rviz" name="rviz" args="-d $(find mapping)sim-mapping.rviz"/>



        <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />


        <node pkg="tf" type="static_transform_publisher" name="sonarscan" args="0 0 0 0 0 0 1 sonar_link sonar 100" />

<!-- -->
        <node name="beamFilter" pkg="move_videoray" type="beamFilter" output="screen"/>

       <node name="optimSlam2D" pkg="g2o_test" type="optimSlam2D" output="screen" /> 

       <!-- <node name="tetDouble" pkg="g2o_test" type="tetDouble" output="screen" /> -->


  <!-- useless  -->
  <!--      <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
            <param name="resolution" value="0.5" />
  -->
            <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
  <!--         <param name="frame_id" type="string" value="odom" />

            <param name="sensor_model/max_range" value="20.0" />
            <param name="pointcloud_max_z" value="-0.7"/>
 -->
            <!-- data source to integrate (PointCloud2) -->

  <!--         <remap from="cloud_in" to="beamClustering/beamClustering" />
    	</node>
 -->

      <node name="moveVideoray" pkg="mapping" type="moveVideoray.py" output="screen"/>


      <node name="scanFilterMA" pkg="mapping" type="scanFilterMA" clear_params="true" output="screen">
        <rosparam file="$(find mapping)/include/parameters/scanFilter.yaml" command="load"/>
      </node>

      <node name="mapBuilder" pkg="mapping" type="mapBuilder" clear_params="true" required="true" output="screen">
        <rosparam file="$(find mapping)/include/parameters/mapBuilder.yaml" command="load"/>
      </node>

      <param name="robot_description" command="cat $(find move_videoray)/videoray.urdf" />
        <!-- Creates a command line argument called file -->
        <arg name="file"/>
        <arg name="rate" default="1"/>

        <!-- Run the rosbag play as a node with the file argument -->
        <node name="rosbag" pkg="rosbag" type="play" args="--clock -r $(arg rate) -u 1300 $(find mapping)/bagfiles/$(arg file)"/>



</launch>
